{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/views/req_av100/form.vue?vue&type=template&id=5e2c279c&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/views/req_av100/form.vue","mtime":1555432139978},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _vm.loading\n      ? _c(\"div\", { staticClass: \"loading-block\" }, [\n          _c(\"div\", { staticClass: \"loader\" })\n        ])\n      : _vm._e(),\n    _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"div\", { staticClass: \"col-md-6\" }, [\n        _c(\"div\", {\n          staticStyle: { overflow: \"auto\", height: \"750px\" },\n          domProps: { innerHTML: _vm._s(_vm.text_info) }\n        })\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"col-md-6\" },\n        [\n          _vm.fields_about\n            ? _c(\n                \"div\",\n                [\n                  _c(\"div\", [\n                    _vm._v(\"Зарегистрирован: \"),\n                    _c(\"b\", [\n                      _vm._v(_vm._s(_vm.fields_about.user_register_date))\n                    ])\n                  ]),\n                  _c(\"div\", [\n                    _vm._v(\"Последний платеж: \"),\n                    _c(\"b\", [\n                      _vm._v(_vm._s(_vm.fields_about.user_last_payment))\n                    ])\n                  ]),\n                  _c(\"div\", [\n                    _vm._v(\"Доступ истек: \"),\n                    _c(\"b\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.fields_about.user_expire_date == \"\" ? \"Да\" : \"Нет\"\n                        )\n                      )\n                    ])\n                  ]),\n                  _c(\"div\", [\n                    _vm._v(\"Telegram: CHATID=\"),\n                    _c(\"b\", [_vm._v(_vm._s(_vm.fields_about.telegram_chatid))])\n                  ]),\n                  _c(\"div\", [_vm._v(\"История оплат с сайта\")]),\n                  _vm._l(_vm.fields_about.history, function(el, key) {\n                    return _c(\"div\", { key: key }, [\n                      _c(\"div\", [\n                        _vm._v(_vm._s(el.credate) + \" \" + _vm._s(el.comment))\n                      ])\n                    ])\n                  }),\n                  _c(\"div\", [\n                    _c(\"span\", [_vm._v(\"Ссылка на оплату: \")]),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-secondary\",\n                        on: {\n                          click: function($event) {\n                            return _vm.addClipboard(_vm.fields_about.paylink)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(_vm.fields_about.paylink))]\n                    )\n                  ]),\n                  _c(\"hr\")\n                ],\n                2\n              )\n            : _vm._e(),\n          _c(\"div\", [\n            _vm._v(\"Телефон: \"),\n            _c(\"b\", [_vm._v(_vm._s(_vm.fields_info.phone))])\n          ]),\n          _c(\"div\", [\n            _vm._v(\"Комментарий: \"),\n            _c(\"b\", [_vm._v(_vm._s(_vm.fields_info.comment))])\n          ]),\n          _c(\"div\", [\n            _vm._v(\"Дата: \"),\n            _c(\"b\", [_vm._v(_vm._s(_vm.fields_info.credate))])\n          ]),\n          _c(\"hr\"),\n          _c(\n            \"div\",\n            [\n              _c(\"span\", [_vm._v(_vm._s(_vm.labels.salestate) + \": \")]),\n              _vm._l(_vm.model.salestate, function(el, key) {\n                return _c(\n                  \"span\",\n                  {\n                    key: key,\n                    staticStyle: { padding: \"0 2px\", dispaly: \"inline-block\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.fields.salestate,\n                          expression: \"fields.salestate\"\n                        }\n                      ],\n                      attrs: { type: \"radio\", id: \"salestate-\" + key },\n                      domProps: {\n                        value: el.value,\n                        checked: _vm._q(_vm.fields.salestate, el.value)\n                      },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.fields, \"salestate\", el.value)\n                        }\n                      }\n                    }),\n                    _c(\n                      \"label\",\n                      {\n                        staticStyle: { padding: \"0 2px\" },\n                        attrs: { for: \"salestate-\" + key }\n                      },\n                      [_vm._v(_vm._s(el.text))]\n                    )\n                  ]\n                )\n              })\n            ],\n            2\n          ),\n          _c(\n            \"div\",\n            [\n              _c(\"span\", [_vm._v(_vm._s(_vm.labels.callState) + \": \")]),\n              _vm._l(_vm.model.callstate, function(el, key) {\n                return _c(\n                  \"span\",\n                  {\n                    key: key,\n                    staticStyle: { padding: \"0 2px\", dispaly: \"inline-block\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.fields.callState,\n                          expression: \"fields.callState\"\n                        }\n                      ],\n                      attrs: { type: \"radio\", id: \"1-\" + key },\n                      domProps: {\n                        value: el.value,\n                        checked: _vm._q(_vm.fields.callState, el.value)\n                      },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.fields, \"callState\", el.value)\n                        }\n                      }\n                    }),\n                    _c(\n                      \"label\",\n                      {\n                        staticStyle: { padding: \"0 2px\" },\n                        attrs: { for: \"1-\" + key }\n                      },\n                      [_vm._v(_vm._s(el.text))]\n                    )\n                  ]\n                )\n              })\n            ],\n            2\n          ),\n          _c(\n            \"div\",\n            [\n              _c(\"span\", [_vm._v(_vm._s(_vm.labels.clienttype) + \": \")]),\n              _vm._l(_vm.model.clienttype, function(el, key) {\n                return _c(\n                  \"span\",\n                  {\n                    key: key,\n                    staticStyle: { padding: \"0 2px\", dispaly: \"inline-block\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.fields.clienttype,\n                          expression: \"fields.clienttype\"\n                        }\n                      ],\n                      attrs: { type: \"radio\", id: \"clienttype-\" + key },\n                      domProps: {\n                        value: el.value,\n                        checked: _vm._q(_vm.fields.clienttype, el.value)\n                      },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.fields, \"clienttype\", el.value)\n                        }\n                      }\n                    }),\n                    _c(\n                      \"label\",\n                      {\n                        staticStyle: { padding: \"0 2px\" },\n                        attrs: { for: \"clienttype-\" + key }\n                      },\n                      [_vm._v(_vm._s(el.text))]\n                    )\n                  ]\n                )\n              })\n            ],\n            2\n          ),\n          _c(\n            \"div\",\n            [\n              _c(\"span\", [_vm._v(_vm._s(_vm.labels.notifytype) + \": \")]),\n              _vm._l(_vm.model.notifytype, function(el, key) {\n                return _c(\n                  \"span\",\n                  {\n                    key: key,\n                    staticStyle: { padding: \"0 2px\", dispaly: \"inline-block\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.fields.notifytype,\n                          expression: \"fields.notifytype\"\n                        }\n                      ],\n                      attrs: { type: \"checkbox\", id: \"notifytype-\" + key },\n                      domProps: {\n                        value: el.value,\n                        checked: Array.isArray(_vm.fields.notifytype)\n                          ? _vm._i(_vm.fields.notifytype, el.value) > -1\n                          : _vm.fields.notifytype\n                      },\n                      on: {\n                        change: function($event) {\n                          var $$a = _vm.fields.notifytype,\n                            $$el = $event.target,\n                            $$c = $$el.checked ? true : false\n                          if (Array.isArray($$a)) {\n                            var $$v = el.value,\n                              $$i = _vm._i($$a, $$v)\n                            if ($$el.checked) {\n                              $$i < 0 &&\n                                _vm.$set(\n                                  _vm.fields,\n                                  \"notifytype\",\n                                  $$a.concat([$$v])\n                                )\n                            } else {\n                              $$i > -1 &&\n                                _vm.$set(\n                                  _vm.fields,\n                                  \"notifytype\",\n                                  $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                )\n                            }\n                          } else {\n                            _vm.$set(_vm.fields, \"notifytype\", $$c)\n                          }\n                        }\n                      }\n                    }),\n                    _c(\n                      \"label\",\n                      {\n                        staticStyle: { padding: \"0 2px\" },\n                        attrs: { for: \"notifytype-\" + key }\n                      },\n                      [_vm._v(_vm._s(el.text))]\n                    )\n                  ]\n                )\n              })\n            ],\n            2\n          ),\n          _c(\"v-textarea\", {\n            attrs: { label: _vm.labels.comment, error: _vm.errors.comment },\n            on: {\n              \"change-model\": function($event) {\n                return _vm.validate(\"comment\", _vm.fields.comment)\n              }\n            },\n            model: {\n              value: _vm.fields.comment,\n              callback: function($$v) {\n                _vm.$set(_vm.fields, \"comment\", $$v)\n              },\n              expression: \"fields.comment\"\n            }\n          }),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-secondary btn-lg\",\n                  staticStyle: { width: \"100%\", margin: \"5px\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.sendSMS()\n                    }\n                  }\n                },\n                [_vm._v(\"Послать SMS\")]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-secondary btn-lg\",\n                  staticStyle: { width: \"100%\", margin: \"5px\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.sendTelegam()\n                    }\n                  }\n                },\n                [_vm._v(\"Послать в telegram\")]\n              )\n            ])\n          ]),\n          _c(\"div\", [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-secondary btn-lg\",\n                    staticStyle: { width: \"100%\", margin: \"5px\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitAndExit()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Выйти\")]\n                )\n              ]),\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-success btn-lg\",\n                    staticStyle: { width: \"100%\", margin: \"5px\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitAndNext()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Следующая заявка\")]\n                )\n              ])\n            ]),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-success btn-lg\",\n                staticStyle: { width: \"100%\", margin: \"5px\" },\n                on: {\n                  click: function($event) {\n                    return _vm.submitAndCall()\n                  }\n                }\n              },\n              [_vm._v(\"Следующая заявка с автодозвоном\")]\n            )\n          ])\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}