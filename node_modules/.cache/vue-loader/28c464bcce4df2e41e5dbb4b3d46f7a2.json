{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/views/content/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/views/content/form.vue","mtime":1555433494164},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '@/config/api'\nimport func from '@/libs/func'\nimport axios from 'axios'\nimport model from '@/models/content'\nimport BaseText from '@/widgets/inputs/BaseText.vue'\nimport BaseImage from '@/widgets/inputs/BaseImage.vue'\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue'\nimport BaseSelectYesNo from '@/widgets/inputs/BaseSelectYesNo.vue'\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue'\nimport FlyEditor from '@/widgets/inputs/FlyEditor/FlyEditor.vue'\nimport mixingValidator from '@/libs/validators'\nimport router from '@/config/router'\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select-yes-no': BaseSelectYesNo,\n    'v-select': BaseSelect,\n    'v-image': BaseImage,\n    'fly-editor': FlyEditor\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields,\n      status: model.status,\n      api: api\n    }\n  },\n  created () {\n    if (this.$route.params.id) {\n      this.fetchData()\n    } else {\n      this.fields.is_parent = '0'\n      this.fields.parent_id = this.$route.query.parent_id ? this.$route.query.parent_id : '0'\n      this.fields.status = '1'\n    }\n  },\n  methods: {\n    goBack: function(e) {\n      router.go(-1)\n    },\n    fetchData: function () {\n      this.loading = true\n      axios\n      .get(api.content, {params: {id: this.$route.params.id} })\n      .then(response => {\n        this.loading = false\n        if (response.data.status == 'ok') {\n          this.fields = response.data.data\n        }\n      })\n      .catch(error => { console.log(error) })\n    },\n    submitForm: function (e) {\n      if (this.validateAll(this.fields)) {\n        this.send(this.fields, api.content).then(() => { this.goBack() })\n      }\n    },\n    send: function() { \n      return new Promise((resolve, reject) => {\n        this.loading = true\n        if (this.fields.id) {\n          var method = 'put'\n          var params = {id: this.fields.id}\n        } else {\n          var method = 'post'\n          var params = {}\n        }\n        axios({ method: method, url: api.content, data: this.fields, params: params})\n        .then(response => {\n          this.loading = false\n          if (response.data.status == 'ok') {\n            this.fields = response.data.data\n            this.isLoad = false\n            this.hasChanges = false\n            resolve(\"ok\");\n          }\n        })\n        .catch(e => {console.log(e)})\n      })\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value)\n      }\n    },\n  }\n}\n",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"form.vue","sourceRoot":"src/views/content","sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\" class=\"loading-block\">\n      <div class=\"loader\"></div>\n    </div>\n    <div>\n        <h1 v-if=\"fields.id\">Изменить контент: {{fields.id}}</h1>\n        <h1 v-else>Создать контент</h1>\n        <hr>\n        <v-text v-model=\"fields.name\" :label=\"labels.name\" v-on:change-model=\"validate('name', fields.name)\" :error=\"errors.name\"></v-text>\n        <v-textarea v-model=\"fields.intro\" :label=\"labels.intro\" v-on:change-model=\"validate('intro', fields.intro)\" :error=\"errors.intro\" :rows=\"4\"></v-textarea>\n        <div class=\"form-group\">\n          <label>{{labels.content}}</label>\n          <div>\n            <fly-editor v-model=\"fields.content\" :rows=\"30\"></fly-editor>\n          </div>\n        </div>\n        <v-image v-model=\"fields.image\" :api=\"api.upload_image\" :label=\"labels.image\" v-on:change-model=\"validate('image', fields.image)\" :error=\"errors.image\"></v-image>\n        <v-text v-model=\"fields.url\" :label=\"labels.url\" v-on:change-model=\"validate('url', fields.url)\" :error=\"errors.url\"></v-text>\n        <v-select-yes-no v-model=\"fields.is_parent\" :label=\"labels.is_parent\" v-on:change-model=\"validate('is_parent', fields.is_parent)\"  :error=\"errors.is_parent\"></v-select-yes-no>\n        <v-text v-model=\"fields.parent_id\" :label=\"labels.parent_id\" v-on:change-model=\"validate('parent_id', fields.parent_id)\" :error=\"errors.parent_id\"></v-text>\n        <v-select v-model=\"fields.status\"  :options=\"status\" :label=\"labels.status\" :error=\"errors.status\"></v-select>\n        <div class=\"text-right\">\n          <button class=\"btn btn-outline-secondary btn-lg\" style=\"width: 150px;\" @click=\"goBack()\">Назад</button>\n          <button class=\"btn btn-outline-success btn-lg\" style=\"width: 150px; margin-left: 5px;\" @click=\"submitForm()\">Записать</button>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/config/api'\nimport func from '@/libs/func'\nimport axios from 'axios'\nimport model from '@/models/content'\nimport BaseText from '@/widgets/inputs/BaseText.vue'\nimport BaseImage from '@/widgets/inputs/BaseImage.vue'\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue'\nimport BaseSelectYesNo from '@/widgets/inputs/BaseSelectYesNo.vue'\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue'\nimport FlyEditor from '@/widgets/inputs/FlyEditor/FlyEditor.vue'\nimport mixingValidator from '@/libs/validators'\nimport router from '@/config/router'\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select-yes-no': BaseSelectYesNo,\n    'v-select': BaseSelect,\n    'v-image': BaseImage,\n    'fly-editor': FlyEditor\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields,\n      status: model.status,\n      api: api\n    }\n  },\n  created () {\n    if (this.$route.params.id) {\n      this.fetchData()\n    } else {\n      this.fields.is_parent = '0'\n      this.fields.parent_id = this.$route.query.parent_id ? this.$route.query.parent_id : '0'\n      this.fields.status = '1'\n    }\n  },\n  methods: {\n    goBack: function(e) {\n      router.go(-1)\n    },\n    fetchData: function () {\n      this.loading = true\n      axios\n      .get(api.content, {params: {id: this.$route.params.id} })\n      .then(response => {\n        this.loading = false\n        if (response.data.status == 'ok') {\n          this.fields = response.data.data\n        }\n      })\n      .catch(error => { console.log(error) })\n    },\n    submitForm: function (e) {\n      if (this.validateAll(this.fields)) {\n        this.send(this.fields, api.content).then(() => { this.goBack() })\n      }\n    },\n    send: function() { \n      return new Promise((resolve, reject) => {\n        this.loading = true\n        if (this.fields.id) {\n          var method = 'put'\n          var params = {id: this.fields.id}\n        } else {\n          var method = 'post'\n          var params = {}\n        }\n        axios({ method: method, url: api.content, data: this.fields, params: params})\n        .then(response => {\n          this.loading = false\n          if (response.data.status == 'ok') {\n            this.fields = response.data.data\n            this.isLoad = false\n            this.hasChanges = false\n            resolve(\"ok\");\n          }\n        })\n        .catch(e => {console.log(e)})\n      })\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value)\n      }\n    },\n  }\n}\n</script>\n"]}]}