{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/widgets/inputs/FlyEditor/FlyEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/widgets/inputs/FlyEditor/FlyEditor.vue","mtime":1554294831699},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport buttons from './buttons'\n\nexport default {\n  props: {\n    value: {\n      type: String,\n      default : ''\n    },\n    rows: {\n      type: Number,\n      default : ''\n    },\n    toolbar: {\n      type: Array,\n      default: () => [\n        ['formats', 'bold' ,'italic', 'underline', 'subscript', 'superscript', 'strikeThrough', 'backColor', 'foreColor', 'fontSize', 'fontName'],\n        ['left', 'right', 'center', 'indent', 'outdent'],\n        ['insertImage', 'createlink', 'unlink'],\n        ['insertOrderedList', 'insertUnorderedList', 'insertHorizontalRule'],\n    //    ['undo', 'redo'],\n        ['cut', 'copy'],\n        ['selectAll', 'removeFormat'],\n        ['code', 'fullscr']\n      ]\n    },\n  },\n  data: function() {\n    return {\n      id: null,\n      content: null,\n      fullscr: false,\n      viewcode: false,\n      buttons: buttons\n    }\n  },\n  watch: {\n    value: function(newVal, oldVal) {\n      if (oldVal == '') {\n        document.getElementById(this.id).innerHTML = newVal\n      }\n    }\n  },\n  methods: {\n    emitChange (ev) {\n      if (this.viewcode) {\n        var val = ev.target.innerText\n      } else {\n        var val = ev.target.innerHTML\n      }\n      this.$emit('change-model', val)\n      this.$emit('input', val)\n    },\n    genAction (btn) {\n      switch (btn.command) {\n        case 'fullscr':\n        if (this.fullscr) {\n          this.fullscr = false\n        } else {\n          this.fullscr = true\n        }\n        break;\n        case 'code':\n        if (this.viewcode) {\n          this.viewcode = false\n          document.getElementById(this.id).innerHTML = this.value\n        } else {\n          this.viewcode = true\n          document.getElementById(this.id).innerText = this.value\n        }\n        break;\n        default:\n        if (!this.viewcode) {\n          if (btn.command == 'createlink' || btn.command == 'insertImage') {\n              btn.value = prompt('Enter the link here: ', '');\n            }\n          document.getElementById(this.id).focus()\n          document.execCommand(btn.command, false, btn.value)\n          this.$emit('change-model', document.getElementById(this.id).innerHTML)\n          this.$emit('input', document.getElementById(this.id).innerHTML)\n        }\n      }\n\n    }\n  },\n  components: {\n  },\n  mounted () {\n    this.id = this._uid\n  },\n  created () {\n\n  },\n  destroyed () {\n\n  }\n}\n",{"version":3,"sources":["FlyEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"FlyEditor.vue","sourceRoot":"src/widgets/inputs/FlyEditor","sourcesContent":["<template>\n  <div>\n    <textarea :value=\"value\" style=\"display:none;\"></textarea>\n    <div  class=\"v-text-editor\" :class=\"{'v-text-editor-full': fullscr}\">\n      <div class=\"v-text-editor-toolbar\">\n        <div class=\"v-text-editor-toolbar-group\" v-for=\"gr in toolbar\">\n          <div class=\"v-text-btn-wrapper\" v-for=\"el in gr\">\n            <template v-if=\"buttons[el].command=='submenu'\">\n              <button class=\"v-text-btn\" v-on:click=\"buttons[el].show ? buttons[el].show = false : buttons[el].show = true\" :title=\"buttons[el].title\" v-html=\"buttons[el].text\"></button>\n              <div v-if=\"buttons[el].show\" class=\"v-text-editor-toolbar-submenu\" :class=\"buttons[el].type\">\n                <div v-for=\"sub in buttons[el].value\">\n                  <button class=\"v-text-btn\" v-on:click=\"buttons[el].show = false;genAction(sub)\" :title=\"sub.title\" v-html=\"sub.text\" :style=\"{background: sub.value }\"></button>\n                </div>\n              </div>\n            </template>\n            <template v-else>\n              <button class=\"v-text-btn\" v-on:click=\"genAction(buttons[el])\" :title=\"buttons[el].title\" v-html=\"buttons[el].text\"></button>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div :id=\"id\" class=\"v-text-editor-content\" contenteditable v-on:blur=\"emitChange\" v-on:keyup=\"emitChange\" :style=\"rows && !fullscr? 'height: '+rows*20+'px' : ''\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport buttons from './buttons'\n\nexport default {\n  props: {\n    value: {\n      type: String,\n      default : ''\n    },\n    rows: {\n      type: Number,\n      default : ''\n    },\n    toolbar: {\n      type: Array,\n      default: () => [\n        ['formats', 'bold' ,'italic', 'underline', 'subscript', 'superscript', 'strikeThrough', 'backColor', 'foreColor', 'fontSize', 'fontName'],\n        ['left', 'right', 'center', 'indent', 'outdent'],\n        ['insertImage', 'createlink', 'unlink'],\n        ['insertOrderedList', 'insertUnorderedList', 'insertHorizontalRule'],\n    //    ['undo', 'redo'],\n        ['cut', 'copy'],\n        ['selectAll', 'removeFormat'],\n        ['code', 'fullscr']\n      ]\n    },\n  },\n  data: function() {\n    return {\n      id: null,\n      content: null,\n      fullscr: false,\n      viewcode: false,\n      buttons: buttons\n    }\n  },\n  watch: {\n    value: function(newVal, oldVal) {\n      if (oldVal == '') {\n        document.getElementById(this.id).innerHTML = newVal\n      }\n    }\n  },\n  methods: {\n    emitChange (ev) {\n      if (this.viewcode) {\n        var val = ev.target.innerText\n      } else {\n        var val = ev.target.innerHTML\n      }\n      this.$emit('change-model', val)\n      this.$emit('input', val)\n    },\n    genAction (btn) {\n      switch (btn.command) {\n        case 'fullscr':\n        if (this.fullscr) {\n          this.fullscr = false\n        } else {\n          this.fullscr = true\n        }\n        break;\n        case 'code':\n        if (this.viewcode) {\n          this.viewcode = false\n          document.getElementById(this.id).innerHTML = this.value\n        } else {\n          this.viewcode = true\n          document.getElementById(this.id).innerText = this.value\n        }\n        break;\n        default:\n        if (!this.viewcode) {\n          if (btn.command == 'createlink' || btn.command == 'insertImage') {\n              btn.value = prompt('Enter the link here: ', '');\n            }\n          document.getElementById(this.id).focus()\n          document.execCommand(btn.command, false, btn.value)\n          this.$emit('change-model', document.getElementById(this.id).innerHTML)\n          this.$emit('input', document.getElementById(this.id).innerHTML)\n        }\n      }\n\n    }\n  },\n  components: {\n  },\n  mounted () {\n    this.id = this._uid\n  },\n  created () {\n\n  },\n  destroyed () {\n\n  }\n}\n</script>\n\n<style lang=\"less\">\n.v-text-editor {\n  background: #fff;\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  .v-text-editor-content {\n    resize: vertical;\n    outline: none;\n    min-height: 150px;\n    overflow: auto;\n    padding: 1em;\n    height: calc(100% - 45px);\n  }\n  .v-text-editor-toolbar {\n    border-bottom: 1px solid #eee;\n    white-space: nowrap;\n    overflow-x: auto;\n    height: 45px;\n    .v-text-editor-toolbar-group {\n      display: inline-block;\n      border-right: 1px solid #aaa;\n    }\n    .v-text-btn {\n      outline: none;\n      background: none;\n      color: #999;\n      padding: 10px;\n      width: 36px;\n      text-align: center;\n      font-size: 16px;\n      border: none;\n      cursor: pointer;\n      border-right: 1px solid #efefef;\n      &:hover {\n        background: #eee;\n        color: #555;\n      }\n    }\n  }\n}\n.v-text-btn-wrapper {\n  display: inline-block;\n  position: relative;\n  .v-text-editor-toolbar-submenu {\n    position: absolute;\n    background: #fff;\n    z-index: 20;\n    &.color {\n      width: 300px;\n      div {\n        display: inline-block;\n      }\n    }\n    &.fontname {\n      button {\n        width: auto;\n        text-align: left;\n      }\n    }\n  }\n}\n.v-text-editor-full {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 20000;\n}\n</style>\n"]}]}