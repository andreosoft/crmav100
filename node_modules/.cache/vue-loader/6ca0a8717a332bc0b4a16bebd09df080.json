{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/views/signup/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/views/signup/login.vue","mtime":1552325703850},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport model from '@/models/login'\nimport api from '@/config/api'\nimport axios from 'axios'\nimport Vue from 'vue'\nimport mixingValidator from '@/libs/validators'\n\nexport default {\n  mixins: [mixingValidator],\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    }\n  },\n  methods: {\n    submitForm: function () {\n      if (this.validateAll(this.fields)) {\n        this.submit()\n      }\n    },\n    submit: function() {\n      this.$store.dispatch('auth/login', { login: this.fields.login, password: this.fields.password })\n        .then(() => {\n          this.$router.push('/')\n        })\n        .catch(e => {this.error = e})\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      return this.errors[field] = this.validator(model.validators[field], value)\n    }\n  }\n\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"login.vue","sourceRoot":"src/views/signup","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10 col-md-8  col-lg-5 text-center\" style=\"margin: 0 auto;\">\n        <h2 style=\"color:#fff\">{{$root.appName}}</h2>\n        <div class=\"login-panel\">\n          <div v-if=\"this.$store.getters['auth/status'] == 'loading'\" class=\"loading-block\">\n            <div class=\"loader\"></div>\n          </div>\n          <div>\n            <h3>Войти</h3>\n            <hr>\n            <form class=\"login\" @submit.prevent=\"submitForm\" method=\"post\" action=\"\">\n              <p v-if=\"this.$store.getters['auth/status'] == 'error'\" style=\"color: red\">{{ this.$store.getters['auth/error'] }}</p>\n              <div class=\"form-group\">\n                <input class=\"form-control form-control-lg\" :class=\"{'is-invalid': errors.login}\" @change=\"validate('login', fields.login)\" v-model=\"fields.login\" type=\"text\" :placeholder=\"labels.login\">\n                <div v-if=\"errors.login\" class=\"invalid-feedback\">{{errors.login}}</div>\n              </div>\n              <div class=\"form-group\">\n                <input class=\"form-control form-control-lg\" :class=\"{'is-invalid': errors.password}\" @change=\"validate('password', fields.password)\" v-model=\"fields.password\" type=\"password\" :placeholder=\"labels.password\">\n                <div v-if=\"errors.password\" class=\"invalid-feedback\">{{errors.password}}</div>\n              </div>\n              <!-- <div class=\"text-right\">\n                <router-link :to=\"{ name: 'forget' }\">напомнить пароль</router-link>\n              </div> -->\n              <div>\n                <button type=\"submit\" class=\"btn btn btn-outline-success btn-lg\" style=\"width: 100%;\">Войти</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport model from '@/models/login'\nimport api from '@/config/api'\nimport axios from 'axios'\nimport Vue from 'vue'\nimport mixingValidator from '@/libs/validators'\n\nexport default {\n  mixins: [mixingValidator],\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields\n    }\n  },\n  methods: {\n    submitForm: function () {\n      if (this.validateAll(this.fields)) {\n        this.submit()\n      }\n    },\n    submit: function() {\n      this.$store.dispatch('auth/login', { login: this.fields.login, password: this.fields.password })\n        .then(() => {\n          this.$router.push('/')\n        })\n        .catch(e => {this.error = e})\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      return this.errors[field] = this.validator(model.validators[field], value)\n    }\n  }\n\n}\n</script>\n"]}]}