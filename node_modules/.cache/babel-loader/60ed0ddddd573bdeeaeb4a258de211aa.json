{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js!/home/andrei/dev/vue/crmav100/node_modules/eslint-loader/index.js??ref--13-0!/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingBase.js","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingBase.js","mtime":1552427220237},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport _getIterator from \"/home/andrei/dev/vue/crmav100/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport axios from 'axios';\nimport router from '@/config/router';\nimport func from '@/libs/func';\nexport default {\n  props: {\n    title: String,\n    actions: Array,\n    fields: Array,\n    api: String\n  },\n  data: function data() {\n    return {\n      loading: false,\n      error: null,\n      selected_all: false,\n      sort: {\n        key: 'id',\n        order: 'ASC'\n      },\n      filters: {},\n      data: []\n    };\n  },\n  computed: {},\n  created: function created() {\n    this.updateRoute();\n  },\n  watch: {\n    '$route': 'updateRoute',\n    selected_all: function selected_all(newVal, oldVal) {\n      if (newVal) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(this.data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var el = _step.value;\n            el.selected = true;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _getIterator(this.data), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            el.selected = false;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    updateRoute: function updateRoute() {\n      for (var field in this.fields) {\n        if (field.filter) {\n          this.filters[field.name] = null;\n        }\n      }\n\n      this.fetchData();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getIterator(this.data), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var el = _step3.value;\n          el.selected = false;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    onChangeFilter: function onChangeFilter() {\n      this.push();\n    },\n    genTopAction: function genTopAction(action) {\n      switch (action.type) {\n        case 'back':\n          router.go(-1);\n          break;\n\n        case 'group':\n          var data = [];\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = _getIterator(this.data), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var el = _step4.value;\n              if (el.selected) data.push(el);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          router.push({\n            name: action.route,\n            params: {\n              ids: data\n            }\n          });\n          break;\n\n        case 'create':\n          router.push({\n            name: action.route\n          });\n          break;\n\n        case 'remove':\n          this.removeSelected(action.api);\n          break;\n      }\n    },\n    genAction: function genAction(action, id) {\n      switch (action.type) {\n        case 'update':\n          router.push({\n            name: action.path,\n            params: {\n              id: id\n            }\n          });\n      }\n    },\n    removeSelected: function removeSelected(api) {\n      var data = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = _getIterator(this.data), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var el = _step5.value;\n          if (el.selected) data.push(el.id);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      if (data.length == 0) {\n        alert('Необходимо выбрать элементы');\n      } else {\n        if (confirm('Вы уверены что хотите удалить выбранные элементы?')) {\n          this.sendData(api, data);\n        }\n      }\n    },\n    sortBy: function sortBy(el) {\n      if (this.sort.key == el.name) {\n        if (this.sort.order == 'ASC') {\n          this.sort.order = 'DESC';\n        } else {\n          this.sort.order = 'ASC';\n        }\n      } else {\n        this.sort.key = el.name;\n        this.sort.order = 'ASC';\n      }\n\n      this.push();\n    },\n    push: function push() {\n      var params = {\n        'sort': this.sort,\n        'filters': this.filters\n      };\n      router.push({\n        query: {\n          q: func.url_encode(params)\n        }\n      });\n    },\n    sendData: function sendData(api, data) {\n      var _this = this;\n\n      this.loading = true;\n      axios.post(api, data).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.status == 'ok') {\n          _this.updateRoute();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      var params = {};\n\n      if (this.$route.query.q) {\n        params = func.url_decode(this.$route.query.q);\n\n        if (params.sort) {\n          this.sort = params.sort;\n        }\n\n        if (params.filters) {\n          this.filters = params.filters;\n        }\n      }\n\n      this.error = null;\n      this.loading = true;\n      axios.get(this.api, {\n        params: params\n      }).then(function (response) {\n        _this2.loading = false;\n\n        if (response.data.data == null) {\n          _this2.data = [];\n        } else {\n          _this2.data = response.data.data;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingBase.js"],"names":["axios","router","func","props","title","String","actions","Array","fields","api","data","loading","error","selected_all","sort","key","order","filters","computed","created","updateRoute","watch","newVal","oldVal","el","selected","methods","field","filter","name","fetchData","onChangeFilter","push","genTopAction","action","type","go","route","params","ids","removeSelected","genAction","id","path","length","alert","confirm","sendData","sortBy","query","q","url_encode","post","then","response","status","catch","e","console","log","$route","url_decode","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport router from '@/config/router'\nimport func from '@/libs/func'\n\nexport default {\n  props: {\n    title: String,\n    actions: Array,\n    fields: Array,\n    api: String,\n  },\n  data: function() {\n    return {\n      loading: false,\n      error: null,\n      selected_all: false,\n      sort: {\n        key: 'id',\n        order: 'ASC'\n      },\n      filters: {},\n      data: []\n    }\n  },\n  computed: {\n\n  },\n  created () {\n    this.updateRoute()\n  },\n  watch: {\n    '$route': 'updateRoute',\n    selected_all: function (newVal, oldVal) {\n      if (newVal) {\n        for (var el of this.data) {\n          el.selected = true\n        }\n      } else {\n        for (var el of this.data) {\n          el.selected = false\n        }\n      }\n    }\n  },\n  methods: {\n    updateRoute: function() {\n      for (var field in this.fields) {\n        if (field.filter) {\n          this.filters[field.name] = null\n        }\n      }\n      this.fetchData()\n      for (var el of this.data) {\n        el.selected = false\n      }\n     },\n    onChangeFilter: function() {\n      this.push()\n    },\n    genTopAction(action) {\n      switch (action.type) {\n        case 'back':\n          router.go(-1)\n          break;\n        case 'group':\n          var data = []\n          for (var el of this.data) {\n            if (el.selected) data.push(el)\n          }\n          router.push({ name: action.route, params: {ids: data}})\n          break;\n        case 'create':\n          router.push({ name: action.route })\n          break;\n        case 'remove':\n          this.removeSelected(action.api)\n          break;\n\n      }\n    },\n    genAction(action, id) {\n      switch (action.type) {\n        case 'update':\n          router.push({ name: action.path, params: {id: id}})\n      }\n    },\n    removeSelected: function(api) {\n      var data = []\n      for (var el of this.data) {\n        if (el.selected) data.push(el.id)\n      }\n      if (data.length == 0) {\n        alert('Необходимо выбрать элементы')\n      } else {\n        if (confirm('Вы уверены что хотите удалить выбранные элементы?')) {\n              this.sendData(api, data)\n        }\n      }\n\n    },\n    sortBy: function(el) {\n      if (this.sort.key == el.name) {\n        if (this.sort.order == 'ASC') {\n          this.sort.order = 'DESC'\n        } else {\n          this.sort.order = 'ASC'\n        }\n      } else {\n        this.sort.key = el.name\n        this.sort.order = 'ASC'\n      }\n      this.push()\n    },\n    push: function() {\n      var params = {\n        'sort': this.sort,\n        'filters': this.filters\n      }\n      router.push({ query: {q: func.url_encode(params)} })\n    },\n    sendData(api, data) {\n      this.loading = true\n      axios\n      .post(api, data)\n      .then(response => {\n        this.loading = false\n        if (response.data.status == 'ok') {\n          this.updateRoute()\n        }\n      })\n      .catch(e => {console.log(e)})\n    },\n    fetchData () {\n      var params = {}\n      if (this.$route.query.q) {\n        params = func.url_decode(this.$route.query.q)\n        if (params.sort) {\n          this.sort = params.sort\n        }\n        if (params.filters) {\n          this.filters = params.filters\n        }\n      }\n      this.error = null\n      this.loading = true\n      axios\n      .get(this.api, {params: params })\n      .then(response => {\n        this.loading = false\n        if (response.data.data == null) {\n          this.data = []\n        } else {\n          this.data = response.data.data\n        }\n      })\n      .catch(error => { console.log(error) })\n    }\n  }\n}\n"]}]}