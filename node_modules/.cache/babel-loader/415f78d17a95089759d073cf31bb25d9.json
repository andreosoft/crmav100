{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js!/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/views/content/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/views/content/form.vue","mtime":1555433494164},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/andrei/dev/vue/crmav100/node_modules/@babel/runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/config/api';\nimport func from '@/libs/func';\nimport axios from 'axios';\nimport model from '@/models/content';\nimport BaseText from '@/widgets/inputs/BaseText.vue';\nimport BaseImage from '@/widgets/inputs/BaseImage.vue';\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue';\nimport BaseSelectYesNo from '@/widgets/inputs/BaseSelectYesNo.vue';\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue';\nimport FlyEditor from '@/widgets/inputs/FlyEditor/FlyEditor.vue';\nimport mixingValidator from '@/libs/validators';\nimport router from '@/config/router';\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select-yes-no': BaseSelectYesNo,\n    'v-select': BaseSelect,\n    'v-image': BaseImage,\n    'fly-editor': FlyEditor\n  },\n  data: function data() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields,\n      status: model.status,\n      api: api\n    };\n  },\n  created: function created() {\n    if (this.$route.params.id) {\n      this.fetchData();\n    } else {\n      this.fields.is_parent = '0';\n      this.fields.parent_id = this.$route.query.parent_id ? this.$route.query.parent_id : '0';\n      this.fields.status = '1';\n    }\n  },\n  methods: {\n    goBack: function goBack(e) {\n      router.go(-1);\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.loading = true;\n      axios.get(api.content, {\n        params: {\n          id: this.$route.params.id\n        }\n      }).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.status == 'ok') {\n          _this.fields = response.data.data;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    submitForm: function submitForm(e) {\n      var _this2 = this;\n\n      if (this.validateAll(this.fields)) {\n        this.send(this.fields, api.content).then(function () {\n          _this2.goBack();\n        });\n      }\n    },\n    send: function send() {\n      var _this3 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this3.loading = true;\n\n        if (_this3.fields.id) {\n          var method = 'put';\n          var params = {\n            id: _this3.fields.id\n          };\n        } else {\n          var method = 'post';\n          var params = {};\n        }\n\n        axios({\n          method: method,\n          url: api.content,\n          data: _this3.fields,\n          params: params\n        }).then(function (response) {\n          _this3.loading = false;\n\n          if (response.data.status == 'ok') {\n            _this3.fields = response.data.data;\n            _this3.isLoad = false;\n            _this3.hasChanges = false;\n            resolve(\"ok\");\n          }\n        }).catch(function (e) {\n          console.log(e);\n        });\n      });\n    },\n    validateAll: function validateAll(fields) {\n      var noerror = true;\n\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n\n      return noerror;\n    },\n    validate: function validate(field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value);\n      }\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\" class=\"loading-block\">\n      <div class=\"loader\"></div>\n    </div>\n    <div>\n        <h1 v-if=\"fields.id\">Изменить контент: {{fields.id}}</h1>\n        <h1 v-else>Создать контент</h1>\n        <hr>\n        <v-text v-model=\"fields.name\" :label=\"labels.name\" v-on:change-model=\"validate('name', fields.name)\" :error=\"errors.name\"></v-text>\n        <v-textarea v-model=\"fields.intro\" :label=\"labels.intro\" v-on:change-model=\"validate('intro', fields.intro)\" :error=\"errors.intro\" :rows=\"4\"></v-textarea>\n        <div class=\"form-group\">\n          <label>{{labels.content}}</label>\n          <div>\n            <fly-editor v-model=\"fields.content\" :rows=\"30\"></fly-editor>\n          </div>\n        </div>\n        <v-image v-model=\"fields.image\" :api=\"api.upload_image\" :label=\"labels.image\" v-on:change-model=\"validate('image', fields.image)\" :error=\"errors.image\"></v-image>\n        <v-text v-model=\"fields.url\" :label=\"labels.url\" v-on:change-model=\"validate('url', fields.url)\" :error=\"errors.url\"></v-text>\n        <v-select-yes-no v-model=\"fields.is_parent\" :label=\"labels.is_parent\" v-on:change-model=\"validate('is_parent', fields.is_parent)\"  :error=\"errors.is_parent\"></v-select-yes-no>\n        <v-text v-model=\"fields.parent_id\" :label=\"labels.parent_id\" v-on:change-model=\"validate('parent_id', fields.parent_id)\" :error=\"errors.parent_id\"></v-text>\n        <v-select v-model=\"fields.status\"  :options=\"status\" :label=\"labels.status\" :error=\"errors.status\"></v-select>\n        <div class=\"text-right\">\n          <button class=\"btn btn-outline-secondary btn-lg\" style=\"width: 150px;\" @click=\"goBack()\">Назад</button>\n          <button class=\"btn btn-outline-success btn-lg\" style=\"width: 150px; margin-left: 5px;\" @click=\"submitForm()\">Записать</button>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/config/api'\nimport func from '@/libs/func'\nimport axios from 'axios'\nimport model from '@/models/content'\nimport BaseText from '@/widgets/inputs/BaseText.vue'\nimport BaseImage from '@/widgets/inputs/BaseImage.vue'\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue'\nimport BaseSelectYesNo from '@/widgets/inputs/BaseSelectYesNo.vue'\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue'\nimport FlyEditor from '@/widgets/inputs/FlyEditor/FlyEditor.vue'\nimport mixingValidator from '@/libs/validators'\nimport router from '@/config/router'\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select-yes-no': BaseSelectYesNo,\n    'v-select': BaseSelect,\n    'v-image': BaseImage,\n    'fly-editor': FlyEditor\n  },\n  data: function() {\n    return {\n      loading: false,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().fields,\n      status: model.status,\n      api: api\n    }\n  },\n  created () {\n    if (this.$route.params.id) {\n      this.fetchData()\n    } else {\n      this.fields.is_parent = '0'\n      this.fields.parent_id = this.$route.query.parent_id ? this.$route.query.parent_id : '0'\n      this.fields.status = '1'\n    }\n  },\n  methods: {\n    goBack: function(e) {\n      router.go(-1)\n    },\n    fetchData: function () {\n      this.loading = true\n      axios\n      .get(api.content, {params: {id: this.$route.params.id} })\n      .then(response => {\n        this.loading = false\n        if (response.data.status == 'ok') {\n          this.fields = response.data.data\n        }\n      })\n      .catch(error => { console.log(error) })\n    },\n    submitForm: function (e) {\n      if (this.validateAll(this.fields)) {\n        this.send(this.fields, api.content).then(() => { this.goBack() })\n      }\n    },\n    send: function() { \n      return new Promise((resolve, reject) => {\n        this.loading = true\n        if (this.fields.id) {\n          var method = 'put'\n          var params = {id: this.fields.id}\n        } else {\n          var method = 'post'\n          var params = {}\n        }\n        axios({ method: method, url: api.content, data: this.fields, params: params})\n        .then(response => {\n          this.loading = false\n          if (response.data.status == 'ok') {\n            this.fields = response.data.data\n            this.isLoad = false\n            this.hasChanges = false\n            resolve(\"ok\");\n          }\n        })\n        .catch(e => {console.log(e)})\n      })\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value)\n      }\n    },\n  }\n}\n</script>\n"],"sourceRoot":"src/views/content"}]}