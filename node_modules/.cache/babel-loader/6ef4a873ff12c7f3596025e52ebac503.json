{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js!/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrei/dev/vue/crmav100/src/views/req_av100/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/views/req_av100/form.vue","mtime":1555432139978},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/andrei/dev/vue/crmav100/node_modules/@babel/runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BaseText from '@/widgets/inputs/BaseText.vue';\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue';\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue';\nimport model from '@/models/request_av100.js';\nimport axios from 'axios';\nimport api from '@/config/api';\nimport router from '@/config/router';\nimport mixingValidator from '@/libs/validators';\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select': BaseSelect\n  },\n  data: function data() {\n    return {\n      model: model,\n      validators: model.validators,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().errors,\n      fields_info: new model.FieldsGet().fields,\n      text_info: '',\n      salekey: null,\n      fields_about: null,\n      api: api.av100\n    };\n  },\n  created: function created() {\n    this.genNew();\n  },\n  computed: {\n    key: function key() {\n      return this.$store.getters['user/profile'].api_key;\n    }\n  },\n  methods: {\n    addClipboard: function addClipboard(text) {\n      if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return false;\n      }\n\n      navigator.clipboard.writeText(text).then(function () {\n        console.log('Async: Copying to clipboard was successful!');\n      }, function (err) {\n        console.error('Async: Could not copy text: ', err);\n      });\n      return false;\n    },\n    genNew: function genNew() {\n      var _this = this;\n\n      this.fields = new model.Fields().fields;\n      this.errors = new model.Fields().errors;\n      this.fields_about = null;\n      return new _Promise(function (resolve, reject) {\n        _this.getTextInfo();\n\n        _this.fetchData().then(function () {\n          _this.getKey().then(function () {\n            _this.getAbout().then(function () {\n              resolve(\"ok\");\n            });\n          });\n        });\n      });\n    },\n    getTextInfo: function getTextInfo() {\n      var _this2 = this;\n\n      axios.get(api.content, {\n        params: {\n          id: '2'\n        }\n      }).then(function (response) {\n        _this2.text_info = response.data.data.content;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    submitAndNext: function submitAndNext() {\n      var _this3 = this;\n\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(function () {\n          _this3.genNew();\n        });\n      }\n    },\n    submitAndExit: function submitAndExit() {\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(function () {\n          router.push({\n            name: 'index'\n          });\n        });\n      }\n    },\n    submitAndCall: function submitAndCall() {\n      var _this4 = this;\n\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(function () {\n          _this4.genNew().then(function () {\n            _this4.$root.$emit('global-call');\n          });\n        });\n      }\n    },\n    fetchData: function fetchData() {\n      var _this5 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this5.loading = true;\n        axios.get(_this5.api, {\n          params: {\n            key: _this5.key,\n            method: 'getsale'\n          }\n        }).then(function (response) {\n          resolve(\"ok\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    },\n    sendSMS: function sendSMS() {\n      axios.get(this.api, {\n        params: {\n          key: this.key,\n          method: 'sendsms',\n          salekey: this.salekey\n        }\n      }).then(function (response) {\n        if (response.data.error) {\n          alert(response.data.msg);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendTelegam: function sendTelegam() {\n      axios.get(this.api, {\n        params: {\n          key: this.key,\n          method: 'sendtlg'\n        }\n      }).then(function (response) {\n        if (response.data.error) {\n          alert(response.data.msg);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendRequest: function sendRequest() {\n      var _this6 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this6.loading = true;\n        var params = {\n          key: _this6.key,\n          method: 'process',\n          salekey: _this6.salekey,\n          salestate: _this6.fields.salestate,\n          callState: _this6.fields.callState,\n          notifytype: _this6.fields.notifytype.join(),\n          clienttype: _this6.fields.clienttype,\n          comment: _this6.fields.comment // console.log(params.notifytype);\n\n        };\n        axios.get(_this6.api, {\n          params: params\n        }).then(function (response) {\n          _this6.loading = false;\n\n          if (response.data.error) {\n            alert(response.data.msg);\n          } else {\n            resolve(\"ok\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    },\n    getAbout: function getAbout() {\n      var _this7 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this7.loading = true;\n        axios.get(_this7.api, {\n          params: {\n            key: _this7.key,\n            method: 'item',\n            salekey: _this7.salekey\n          }\n        }).then(function (response) {\n          _this7.loading = false;\n\n          if (!response.data.error) {\n            _this7.fields_about = response.data;\n            resolve(\"ok\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    },\n    getKey: function getKey() {\n      var _this8 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this8.loading = true;\n        axios.get(_this8.api, {\n          params: {\n            key: _this8.key,\n            method: 'list',\n            search: '',\n            state: '4'\n          }\n        }).then(function (response) {\n          _this8.loading = false;\n\n          if (!response.data.error) {\n            _this8.fields_info = response.data[0];\n            _this8.salekey = response.data[0].key;\n            _this8.$root.phone_number = _this8.fields_info.phone.substr(1);\n            resolve(\"ok\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    },\n    validateAll: function validateAll(fields) {\n      var noerror = true;\n\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false;\n        }\n      }\n\n      return noerror;\n    },\n    validate: function validate(field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value);\n      }\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\" class=\"loading-block\">\n      <div class=\"loader\"></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div v-html=\"text_info\" style=\"overflow: auto; height: 750px;\">\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div v-if=\"fields_about\">\n          <div>Зарегистрирован: <b>{{fields_about.user_register_date}}</b></div> \n          <div>Последний платеж: <b>{{fields_about.user_last_payment}}</b></div> \n          <div>Доступ истек: <b>{{fields_about.user_expire_date == '' ? 'Да' : 'Нет'}}</b></div> \n          <div>Telegram: CHATID=<b>{{fields_about.telegram_chatid}}</b></div> \n          <div>История оплат с сайта</div>\n          <div v-for=\"(el, key) of fields_about.history\" :key=\"key\">\n            <div>{{el.credate}} {{el.comment}}</div>\n          </div>\n          <div><span>Ссылка на оплату: </span>\n          <button class=\"btn btn-secondary\" @click=\"addClipboard(fields_about.paylink)\">{{fields_about.paylink}}</button></div>\n          <hr>\n        </div>\n        <div>Телефон: <b>{{fields_info.phone}}</b></div> \n        <div>Комментарий: <b>{{fields_info.comment}}</b></div> \n        <div>Дата: <b>{{fields_info.credate}}</b></div> \n        <hr>\n\n        <div>\n          <span>{{labels.salestate}}: </span>\n          <span v-for=\"(el, key) of model.salestate\" :key=\"key\" style=\"padding: 0 2px; dispaly: inline-block;\">\n            <input type=\"radio\" :value=\"el.value\" :id=\"'salestate-'+key\" v-model=\"fields.salestate\"><label style=\"padding: 0 2px;\" :for=\"'salestate-'+key\">{{el.text}}</label>\n          </span>\n        </div>\n\n        <div>\n          <span>{{labels.callState}}: </span>\n          <span v-for=\"(el, key) of model.callstate\" :key=\"key\" style=\"padding: 0 2px; dispaly: inline-block;\">\n            <input type=\"radio\" :value=\"el.value\" :id=\"'1-'+key\" v-model=\"fields.callState\"><label style=\"padding: 0 2px;\" :for=\"'1-'+key\">{{el.text}}</label>\n          </span>\n        </div>\n\n        <div>\n          <span>{{labels.clienttype}}: </span>\n          <span v-for=\"(el, key) of model.clienttype\" :key=\"key\" style=\"padding: 0 2px; dispaly: inline-block;\">\n            <input type=\"radio\" :value=\"el.value\" :id=\"'clienttype-'+key\" v-model=\"fields.clienttype\"><label style=\"padding: 0 2px;\" :for=\"'clienttype-'+key\">{{el.text}}</label>\n          </span>\n        </div>\n\n        <div>\n          <span>{{labels.notifytype}}: </span>\n          <span v-for=\"(el, key) of model.notifytype\" :key=\"key\" style=\"padding: 0 2px; dispaly: inline-block;\">\n            <input type=\"checkbox\" :value=\"el.value\" :id=\"'notifytype-'+key\" v-model=\"fields.notifytype\"><label style=\"padding: 0 2px;\" :for=\"'notifytype-'+key\">{{el.text}}</label>\n          </span>\n        </div>\n\n        <v-textarea v-model=\"fields.comment\" :label=\"labels.comment\" v-on:change-model=\"validate('comment', fields.comment)\" :error=\"errors.comment\"></v-textarea>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button class=\"btn btn-secondary btn-lg\" style=\"width: 100%; margin: 5px;\" @click=\"sendSMS()\">Послать SMS</button>\n          </div>\n          <div class=\"col-6\">\n            <button class=\"btn btn-secondary btn-lg\" style=\"width: 100%; margin: 5px;\" @click=\"sendTelegam()\">Послать в telegram</button>\n          </div>\n        </div>\n        <div>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button class=\"btn btn-secondary btn-lg\" style=\"width: 100%; margin: 5px;\" @click=\"submitAndExit()\">Выйти</button>\n          </div>\n          <div class=\"col-6\">\n            <button class=\"btn btn-success btn-lg\" style=\"width: 100%; margin: 5px;\" @click=\"submitAndNext()\">Следующая заявка</button>\n          </div>\n        </div>\n          <button class=\"btn btn-success btn-lg\" style=\"width: 100%; margin: 5px;\" @click=\"submitAndCall()\">Следующая заявка с автодозвоном</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseText from '@/widgets/inputs/BaseText.vue'\nimport BaseTextarea from '@/widgets/inputs/BaseTextarea.vue'\nimport BaseSelect from '@/widgets/inputs/BaseSelect.vue'\nimport model from '@/models/request_av100.js'\nimport axios from 'axios'\nimport api from '@/config/api'\nimport router from '@/config/router'\nimport mixingValidator from '@/libs/validators'\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nexport default {\n  mixins: [mixingValidator],\n  components: {\n    'v-text': BaseText,\n    'v-textarea': BaseTextarea,\n    'v-select': BaseSelect\n  },\n  data: function() {\n    return {\n      model: model,\n      validators: model.validators,\n      labels: model.labels,\n      fields: new model.Fields().fields,\n      errors: new model.Fields().errors,\n      fields_info: new model.FieldsGet().fields,\n      text_info: '',\n      salekey: null,\n      fields_about: null,\n      api: api.av100\n    }\n  },\n  created() {\n    this.genNew()\n  },\n  computed: {\n    key: function() {\n      return this.$store.getters['user/profile'].api_key\n    }\n  },\n  methods: {\n    addClipboard: function(text) {\n      if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return false;\n      }\n      navigator.clipboard.writeText(text).then(function() {\n        console.log('Async: Copying to clipboard was successful!');\n      }, function(err) {\n        console.error('Async: Could not copy text: ', err);\n      });\n      return false;\n    },\n    genNew: function() {\n      this.fields = new model.Fields().fields\n      this.errors = new model.Fields().errors\n      this.fields_about = null\n      return new Promise((resolve, reject) => {\n        this.getTextInfo()\n        this.fetchData().then(() => { this.getKey().then(() => { this.getAbout().then(()=> { resolve(\"ok\") })  }) })\n      })\n    },\n    getTextInfo: function() {\n      axios\n      .get(api.content, {params: {id: '2' }})\n      .then(response => { this.text_info = response.data.data.content})\n      .catch(error => { console.log(error) })\n    },\n    submitAndNext: function() {\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(() => {this.genNew()})\n      }\n      \n    },\n    submitAndExit: function() {\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(() => {router.push({ name: 'index' })})\n      }\n    },\n    submitAndCall: function() {\n      if (this.validateAll(this.fields)) {\n        this.sendRequest().then(() => {this.genNew().then(() => { this.$root.$emit('global-call') })})\n      }\n    },\n    fetchData () {\n      return new Promise((resolve, reject) => {\n        this.loading = true\n        axios\n        .get(this.api, {params: {key: this.key, method: 'getsale'} })\n        .then(response => { resolve(\"ok\") })\n        .catch(error => { console.log(error) })\n      })\n    },\n    sendSMS: function() {\n      axios\n        .get(this.api, {params: {key: this.key, method: 'sendsms', salekey: this.salekey} })\n        .then(response => { if (response.data.error) { alert(response.data.msg)}})\n        .catch(error => { console.log(error) })\n    },\n    sendTelegam: function() {\n      axios\n        .get(this.api, {params: {key: this.key, method: 'sendtlg'} })\n        .then(response => { if (response.data.error) { alert(response.data.msg)}})\n        .catch(error => { console.log(error) })\n    },\n    sendRequest: function() {\n      return new Promise((resolve, reject) => {\n        this.loading = true\n        var params = {\n            key: this.key, \n            method: 'process',\n            salekey: this.salekey,\n            salestate: this.fields.salestate,\n            callState:this.fields.callState,\n            notifytype: this.fields.notifytype.join(),\n            clienttype: this.fields.clienttype,\n            comment: this.fields.comment\n            }\n            // console.log(params.notifytype);\n            \n        axios\n          .get(this.api, {params: params})\n          .then(response => { \n            this.loading = false\n            if (response.data.error) { alert(response.data.msg)} \n            else { resolve(\"ok\")  }\n          })\n          .catch(error => { console.log(error) })\n      })\n    },\n    getAbout: function() {\n      return new Promise((resolve, reject) => {\n        this.loading = true\n        axios\n        .get(this.api, {params: {key: this.key, method: 'item', salekey: this.salekey} })\n        .then(response => {\n          this.loading = false\n          if (!response.data.error) {\n            this.fields_about = response.data\n            resolve(\"ok\") \n          }               \n        })\n        .catch(error => { console.log(error) })\n      })\n    },\n    getKey: function() {\n      return new Promise((resolve, reject) => {\n        this.loading = true\n        axios\n        .get(this.api, {params: {key: this.key, method: 'list', search: '', state: '4'} })\n        .then(response => {\n          this.loading = false\n          if (!response.data.error) {\n            this.fields_info = response.data[0]\n            this.salekey = response.data[0].key\n            this.$root.phone_number = this.fields_info.phone.substr(1)\n            resolve(\"ok\") \n          }               \n        })\n        .catch(error => { console.log(error) })\n      })\n    },\n    validateAll: function(fields) {\n      var noerror = true;\n      for (var index in fields) {\n        if (this.validate(index, fields[index])) {\n          noerror = false\n        }\n      }\n      return noerror\n    },\n    validate: function (field, value) {\n      if (model.validators[field]) {\n        return this.errors[field] = this.validator(model.validators[field], value)\n      }\n    },\n  }\n}\n</script>\n"],"sourceRoot":"src/views/req_av100"}]}