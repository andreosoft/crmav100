{"remainingRequest":"/home/andrei/dev/vue/crmav100/node_modules/thread-loader/dist/cjs.js!/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js!/home/andrei/dev/vue/crmav100/node_modules/eslint-loader/index.js??ref--13-0!/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingParent.js","dependencies":[{"path":"/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingParent.js","mtime":1542716199317},{"path":"/home/andrei/dev/vue/crmav100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrei/dev/vue/crmav100/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _getIterator from \"/home/andrei/dev/vue/crmav100/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport axios from 'axios';\nimport router from '@/config/router';\nimport func from '@/libs/func';\nimport TableMixingBase from './TableMixingBase';\nexport default {\n  mixins: [TableMixingBase],\n  props: {},\n  data: function data() {\n    return {\n      parent: {\n        id: '',\n        parent: '',\n        name: ''\n      }\n    };\n  },\n  methods: {\n    parent_id: function parent_id() {\n      return this.$route.params.parent;\n    },\n    genTopAction: function genTopAction(action) {\n      switch (action.type) {\n        case 'back':\n          router.go(-1);\n          break;\n\n        case 'up':\n          var par = 0;\n\n          if (this.parent.parent > 0) {\n            par = this.parent.parent;\n          }\n\n          router.push({\n            params: {\n              parent: par\n            },\n            query: this.$route.query\n          });\n          break;\n\n        case 'group':\n          var data = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(this.data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var el = _step.value;\n              if (el.selected) data.push(el);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          router.push({\n            name: action.route,\n            params: {\n              ids: data\n            }\n          });\n          break;\n\n        case 'create':\n          router.push({\n            name: action.route,\n            params: {\n              params: func.url_encode({\n                'ret': this.$route.fullPath\n              })\n            }\n          });\n          break;\n\n        case 'remove':\n          this.removeSelected(action.api);\n          break;\n      }\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var params = {};\n\n      if (this.$route.query.q) {\n        params = func.url_decode(this.$route.query.q);\n\n        if (params.sort) {\n          this.sort = params.sort;\n        }\n\n        if (params.filters) {\n          this.filters = params.filters;\n        }\n      }\n\n      params.parent = this.parent_id();\n      this.error = null;\n      this.loading = true;\n      axios.get(this.api, {\n        params: params\n      }).then(function (response) {\n        _this.loading = false;\n\n        if (response.data.data == null) {\n          _this.data = [];\n        } else {\n          _this.data = response.data.data;\n        }\n\n        _this.parent = response.data.parent;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/andrei/dev/vue/crmav100/src/widgets/tables/TableMixingParent.js"],"names":["axios","router","func","TableMixingBase","mixins","props","data","parent","id","name","methods","parent_id","$route","params","genTopAction","action","type","go","par","push","query","el","selected","route","ids","url_encode","fullPath","removeSelected","api","fetchData","q","url_decode","sort","filters","error","loading","get","then","response","catch","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport router from '@/config/router'\nimport func from '@/libs/func'\nimport TableMixingBase from './TableMixingBase'\nexport default {\n  mixins: [TableMixingBase],\n  props: {\n\n  },\n  data: function() {\n    return {\n      parent: {\n        id: '',\n        parent: '',\n        name: ''\n      },\n    }\n  },\n  methods: {\n    parent_id: function() {return this.$route.params.parent},\n    genTopAction(action) {\n      switch (action.type) {\n        case 'back':\n          router.go(-1)\n          break;\n        case 'up':\n          var par = 0\n          if (this.parent.parent > 0) {\n            par = this.parent.parent\n          }\n          router.push({ params: {parent: par}, query: this.$route.query})\n          break;\n        case 'group':\n          var data = []\n          for (var el of this.data) {\n            if (el.selected) data.push(el)\n          }\n          router.push({ name: action.route, params: {ids: data}})\n          break;\n        case 'create':\n          router.push({ name: action.route, params: {params: func.url_encode({'ret': this.$route.fullPath})}})\n          break;\n        case 'remove':\n          this.removeSelected(action.api)\n          break;\n\n      }\n    },\n    fetchData () {\n      var params = {}\n      if (this.$route.query.q) {\n        params = func.url_decode(this.$route.query.q)\n        if (params.sort) {\n          this.sort = params.sort\n        }\n        if (params.filters) {\n          this.filters = params.filters\n        }\n      }\n      params.parent = this.parent_id()\n      this.error = null\n      this.loading = true\n      axios\n      .get(this.api, {params: params })\n      .then(response => {\n        this.loading = false\n        if (response.data.data == null) {\n          this.data = []\n        } else {\n          this.data = response.data.data\n        }\n        this.parent = response.data.parent\n      })\n      .catch(error => { console.log(error) })\n    }\n  }\n}\n"]}]}